/*
 * This file is generated by jOOQ.
 */
package org.example.spring.tutorial.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.example.spring.tutorial.generated.Keys;
import org.example.spring.tutorial.generated.Public;
import org.example.spring.tutorial.generated.tables.records.ScheduleRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Schedule extends TableImpl<ScheduleRecord> {

    private static final long serialVersionUID = -1109047080;

    /**
     * The reference instance of <code>public.schedule</code>
     */
    public static final Schedule SCHEDULE = new Schedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleRecord> getRecordType() {
        return ScheduleRecord.class;
    }

    /**
     * The column <code>public.schedule.id</code>.
     */
    public final TableField<ScheduleRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('schedule_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.schedule.idd</code>.
     */
    public final TableField<ScheduleRecord, Integer> IDD = createField(DSL.name("idd"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.schedule.time_of_receipt</code>.
     */
    public final TableField<ScheduleRecord, String> TIME_OF_RECEIPT = createField(DSL.name("time_of_receipt"), org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>public.schedule.create_date</code>.
     */
    public final TableField<ScheduleRecord, LocalDateTime> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.schedule.delete_date</code>.
     */
    public final TableField<ScheduleRecord, LocalDateTime> DELETE_DATE = createField(DSL.name("delete_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.schedule</code> table reference
     */
    public Schedule() {
        this(DSL.name("schedule"), null);
    }

    /**
     * Create an aliased <code>public.schedule</code> table reference
     */
    public Schedule(String alias) {
        this(DSL.name(alias), SCHEDULE);
    }

    /**
     * Create an aliased <code>public.schedule</code> table reference
     */
    public Schedule(Name alias) {
        this(alias, SCHEDULE);
    }

    private Schedule(Name alias, Table<ScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Schedule(Name alias, Table<ScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Schedule(Table<O> child, ForeignKey<O, ScheduleRecord> key) {
        super(child, key, SCHEDULE);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<ScheduleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCHEDULE;
    }

    @Override
    public UniqueKey<ScheduleRecord> getPrimaryKey() {
        return Keys.PK_SCHEDULE_ID;
    }

    @Override
    public List<UniqueKey<ScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleRecord>>asList(Keys.PK_SCHEDULE_ID, Keys.SCHEDULE_IDD_KEY);
    }

    @Override
    public Schedule as(String alias) {
        return new Schedule(DSL.name(alias), this);
    }

    @Override
    public Schedule as(Name alias) {
        return new Schedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Schedule rename(String name) {
        return new Schedule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Schedule rename(Name name) {
        return new Schedule(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
