/*
 * This file is generated by jOOQ.
 */
package org.example.spring.tutorial.generated;


import org.example.spring.tutorial.generated.tables.Doctors;
import org.example.spring.tutorial.generated.tables.Journal;
import org.example.spring.tutorial.generated.tables.NameOfPosition;
import org.example.spring.tutorial.generated.tables.NameOfService;
import org.example.spring.tutorial.generated.tables.Patients;
import org.example.spring.tutorial.generated.tables.Schedule;
import org.example.spring.tutorial.generated.tables.Services;
import org.example.spring.tutorial.generated.tables.records.DoctorsRecord;
import org.example.spring.tutorial.generated.tables.records.JournalRecord;
import org.example.spring.tutorial.generated.tables.records.NameOfPositionRecord;
import org.example.spring.tutorial.generated.tables.records.NameOfServiceRecord;
import org.example.spring.tutorial.generated.tables.records.PatientsRecord;
import org.example.spring.tutorial.generated.tables.records.ScheduleRecord;
import org.example.spring.tutorial.generated.tables.records.ServicesRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DoctorsRecord, Integer> IDENTITY_DOCTORS = Identities0.IDENTITY_DOCTORS;
    public static final Identity<JournalRecord, Integer> IDENTITY_JOURNAL = Identities0.IDENTITY_JOURNAL;
    public static final Identity<NameOfPositionRecord, Integer> IDENTITY_NAME_OF_POSITION = Identities0.IDENTITY_NAME_OF_POSITION;
    public static final Identity<NameOfServiceRecord, Integer> IDENTITY_NAME_OF_SERVICE = Identities0.IDENTITY_NAME_OF_SERVICE;
    public static final Identity<PatientsRecord, Integer> IDENTITY_PATIENTS = Identities0.IDENTITY_PATIENTS;
    public static final Identity<ScheduleRecord, Integer> IDENTITY_SCHEDULE = Identities0.IDENTITY_SCHEDULE;
    public static final Identity<ServicesRecord, Integer> IDENTITY_SERVICES = Identities0.IDENTITY_SERVICES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DoctorsRecord> PK_DOCTORS_ID = UniqueKeys0.PK_DOCTORS_ID;
    public static final UniqueKey<DoctorsRecord> DOCTORS_IDD_KEY = UniqueKeys0.DOCTORS_IDD_KEY;
    public static final UniqueKey<DoctorsRecord> DOCTORS_EMPLOYEE_CODE_KEY = UniqueKeys0.DOCTORS_EMPLOYEE_CODE_KEY;
    public static final UniqueKey<JournalRecord> PK_JOURNAL_ID = UniqueKeys0.PK_JOURNAL_ID;
    public static final UniqueKey<JournalRecord> JOURNAL_IDD_KEY = UniqueKeys0.JOURNAL_IDD_KEY;
    public static final UniqueKey<NameOfPositionRecord> PK_NAME_OF_POSITION_ID = UniqueKeys0.PK_NAME_OF_POSITION_ID;
    public static final UniqueKey<NameOfPositionRecord> NAME_OF_POSITION_IDD_KEY = UniqueKeys0.NAME_OF_POSITION_IDD_KEY;
    public static final UniqueKey<NameOfServiceRecord> PK_NAME_OF_SERVICE_ID = UniqueKeys0.PK_NAME_OF_SERVICE_ID;
    public static final UniqueKey<NameOfServiceRecord> NAME_OF_SERVICE_IDD_KEY = UniqueKeys0.NAME_OF_SERVICE_IDD_KEY;
    public static final UniqueKey<PatientsRecord> PK_PATIENTS_ID = UniqueKeys0.PK_PATIENTS_ID;
    public static final UniqueKey<PatientsRecord> PATIENTS_IDD_KEY = UniqueKeys0.PATIENTS_IDD_KEY;
    public static final UniqueKey<PatientsRecord> PATIENTS_CARD_NUMBER_KEY = UniqueKeys0.PATIENTS_CARD_NUMBER_KEY;
    public static final UniqueKey<ScheduleRecord> PK_SCHEDULE_ID = UniqueKeys0.PK_SCHEDULE_ID;
    public static final UniqueKey<ScheduleRecord> SCHEDULE_IDD_KEY = UniqueKeys0.SCHEDULE_IDD_KEY;
    public static final UniqueKey<ServicesRecord> PK_SERVICES_ID = UniqueKeys0.PK_SERVICES_ID;
    public static final UniqueKey<ServicesRecord> SERVICES_IDD_KEY = UniqueKeys0.SERVICES_IDD_KEY;
    public static final UniqueKey<ServicesRecord> SERVICES_NUMBER_KEY = UniqueKeys0.SERVICES_NUMBER_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DoctorsRecord, NameOfPositionRecord> DOCTORS__FK_DOCTORS_NAME_OF_POSITION = ForeignKeys0.DOCTORS__FK_DOCTORS_NAME_OF_POSITION;
    public static final ForeignKey<DoctorsRecord, ScheduleRecord> DOCTORS__FK_DOCTORS_SCHEDULE = ForeignKeys0.DOCTORS__FK_DOCTORS_SCHEDULE;
    public static final ForeignKey<DoctorsRecord, NameOfServiceRecord> DOCTORS__FK_DOCTORS_NAME_OF_SERVICE = ForeignKeys0.DOCTORS__FK_DOCTORS_NAME_OF_SERVICE;
    public static final ForeignKey<JournalRecord, PatientsRecord> JOURNAL__FK_JOURNAL_PATIENT = ForeignKeys0.JOURNAL__FK_JOURNAL_PATIENT;
    public static final ForeignKey<JournalRecord, DoctorsRecord> JOURNAL__FK_JOURNAL_DOCTORS_NAME = ForeignKeys0.JOURNAL__FK_JOURNAL_DOCTORS_NAME;
    public static final ForeignKey<JournalRecord, ServicesRecord> JOURNAL__FK_JOURNAL_SERVICES = ForeignKeys0.JOURNAL__FK_JOURNAL_SERVICES;
    public static final ForeignKey<ServicesRecord, NameOfServiceRecord> SERVICES__FK_SERVICES_NAME_OF_SERVICE = ForeignKeys0.SERVICES__FK_SERVICES_NAME_OF_SERVICE;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DoctorsRecord, Integer> IDENTITY_DOCTORS = Internal.createIdentity(Doctors.DOCTORS, Doctors.DOCTORS.ID);
        public static Identity<JournalRecord, Integer> IDENTITY_JOURNAL = Internal.createIdentity(Journal.JOURNAL, Journal.JOURNAL.ID);
        public static Identity<NameOfPositionRecord, Integer> IDENTITY_NAME_OF_POSITION = Internal.createIdentity(NameOfPosition.NAME_OF_POSITION, NameOfPosition.NAME_OF_POSITION.ID);
        public static Identity<NameOfServiceRecord, Integer> IDENTITY_NAME_OF_SERVICE = Internal.createIdentity(NameOfService.NAME_OF_SERVICE, NameOfService.NAME_OF_SERVICE.ID);
        public static Identity<PatientsRecord, Integer> IDENTITY_PATIENTS = Internal.createIdentity(Patients.PATIENTS, Patients.PATIENTS.ID);
        public static Identity<ScheduleRecord, Integer> IDENTITY_SCHEDULE = Internal.createIdentity(Schedule.SCHEDULE, Schedule.SCHEDULE.ID);
        public static Identity<ServicesRecord, Integer> IDENTITY_SERVICES = Internal.createIdentity(Services.SERVICES, Services.SERVICES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DoctorsRecord> PK_DOCTORS_ID = Internal.createUniqueKey(Doctors.DOCTORS, "pk_doctors_id", new TableField[] { Doctors.DOCTORS.ID }, true);
        public static final UniqueKey<DoctorsRecord> DOCTORS_IDD_KEY = Internal.createUniqueKey(Doctors.DOCTORS, "doctors_idd_key", new TableField[] { Doctors.DOCTORS.IDD }, true);
        public static final UniqueKey<DoctorsRecord> DOCTORS_EMPLOYEE_CODE_KEY = Internal.createUniqueKey(Doctors.DOCTORS, "doctors_employee_code_key", new TableField[] { Doctors.DOCTORS.EMPLOYEE_CODE }, true);
        public static final UniqueKey<JournalRecord> PK_JOURNAL_ID = Internal.createUniqueKey(Journal.JOURNAL, "pk_journal_id", new TableField[] { Journal.JOURNAL.ID }, true);
        public static final UniqueKey<JournalRecord> JOURNAL_IDD_KEY = Internal.createUniqueKey(Journal.JOURNAL, "journal_idd_key", new TableField[] { Journal.JOURNAL.IDD }, true);
        public static final UniqueKey<NameOfPositionRecord> PK_NAME_OF_POSITION_ID = Internal.createUniqueKey(NameOfPosition.NAME_OF_POSITION, "pk_name_of_position_id", new TableField[] { NameOfPosition.NAME_OF_POSITION.ID }, true);
        public static final UniqueKey<NameOfPositionRecord> NAME_OF_POSITION_IDD_KEY = Internal.createUniqueKey(NameOfPosition.NAME_OF_POSITION, "name_of_position_idd_key", new TableField[] { NameOfPosition.NAME_OF_POSITION.IDD }, true);
        public static final UniqueKey<NameOfServiceRecord> PK_NAME_OF_SERVICE_ID = Internal.createUniqueKey(NameOfService.NAME_OF_SERVICE, "pk_name_of_service_id", new TableField[] { NameOfService.NAME_OF_SERVICE.ID }, true);
        public static final UniqueKey<NameOfServiceRecord> NAME_OF_SERVICE_IDD_KEY = Internal.createUniqueKey(NameOfService.NAME_OF_SERVICE, "name_of_service_idd_key", new TableField[] { NameOfService.NAME_OF_SERVICE.IDD }, true);
        public static final UniqueKey<PatientsRecord> PK_PATIENTS_ID = Internal.createUniqueKey(Patients.PATIENTS, "pk_patients_id", new TableField[] { Patients.PATIENTS.ID }, true);
        public static final UniqueKey<PatientsRecord> PATIENTS_IDD_KEY = Internal.createUniqueKey(Patients.PATIENTS, "patients_idd_key", new TableField[] { Patients.PATIENTS.IDD }, true);
        public static final UniqueKey<PatientsRecord> PATIENTS_CARD_NUMBER_KEY = Internal.createUniqueKey(Patients.PATIENTS, "patients_card_number_key", new TableField[] { Patients.PATIENTS.CARD_NUMBER }, true);
        public static final UniqueKey<ScheduleRecord> PK_SCHEDULE_ID = Internal.createUniqueKey(Schedule.SCHEDULE, "pk_schedule_id", new TableField[] { Schedule.SCHEDULE.ID }, true);
        public static final UniqueKey<ScheduleRecord> SCHEDULE_IDD_KEY = Internal.createUniqueKey(Schedule.SCHEDULE, "schedule_idd_key", new TableField[] { Schedule.SCHEDULE.IDD }, true);
        public static final UniqueKey<ServicesRecord> PK_SERVICES_ID = Internal.createUniqueKey(Services.SERVICES, "pk_services_id", new TableField[] { Services.SERVICES.ID }, true);
        public static final UniqueKey<ServicesRecord> SERVICES_IDD_KEY = Internal.createUniqueKey(Services.SERVICES, "services_idd_key", new TableField[] { Services.SERVICES.IDD }, true);
        public static final UniqueKey<ServicesRecord> SERVICES_NUMBER_KEY = Internal.createUniqueKey(Services.SERVICES, "services_number_key", new TableField[] { Services.SERVICES.NUMBER }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<DoctorsRecord, NameOfPositionRecord> DOCTORS__FK_DOCTORS_NAME_OF_POSITION = Internal.createForeignKey(Keys.NAME_OF_POSITION_IDD_KEY, Doctors.DOCTORS, "fk_doctors_name_of_position", new TableField[] { Doctors.DOCTORS.POSITION_ID }, true);
        public static final ForeignKey<DoctorsRecord, ScheduleRecord> DOCTORS__FK_DOCTORS_SCHEDULE = Internal.createForeignKey(Keys.SCHEDULE_IDD_KEY, Doctors.DOCTORS, "fk_doctors_schedule", new TableField[] { Doctors.DOCTORS.TIME_OF_RECEIPT_ID }, true);
        public static final ForeignKey<DoctorsRecord, NameOfServiceRecord> DOCTORS__FK_DOCTORS_NAME_OF_SERVICE = Internal.createForeignKey(Keys.NAME_OF_SERVICE_IDD_KEY, Doctors.DOCTORS, "fk_doctors_name_of_service", new TableField[] { Doctors.DOCTORS.TYPE_OF_SERVICE_ID }, true);
        public static final ForeignKey<JournalRecord, PatientsRecord> JOURNAL__FK_JOURNAL_PATIENT = Internal.createForeignKey(Keys.PATIENTS_IDD_KEY, Journal.JOURNAL, "fk_journal_patient", new TableField[] { Journal.JOURNAL.CARD_NUMBER_ID }, true);
        public static final ForeignKey<JournalRecord, DoctorsRecord> JOURNAL__FK_JOURNAL_DOCTORS_NAME = Internal.createForeignKey(Keys.DOCTORS_IDD_KEY, Journal.JOURNAL, "fk_journal_doctors_name", new TableField[] { Journal.JOURNAL.DOCTOR_NAME_ID }, true);
        public static final ForeignKey<JournalRecord, ServicesRecord> JOURNAL__FK_JOURNAL_SERVICES = Internal.createForeignKey(Keys.SERVICES_IDD_KEY, Journal.JOURNAL, "fk_journal_services", new TableField[] { Journal.JOURNAL.SERVICE_ID }, true);
        public static final ForeignKey<ServicesRecord, NameOfServiceRecord> SERVICES__FK_SERVICES_NAME_OF_SERVICE = Internal.createForeignKey(Keys.NAME_OF_SERVICE_IDD_KEY, Services.SERVICES, "fk_services_name_of_service", new TableField[] { Services.SERVICES.TYPE_OF_SERVICE_ID }, true);
    }
}
