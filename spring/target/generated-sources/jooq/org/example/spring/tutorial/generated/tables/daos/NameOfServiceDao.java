/*
 * This file is generated by jOOQ.
 */
package org.example.spring.tutorial.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.example.spring.tutorial.generated.tables.NameOfService;
import org.example.spring.tutorial.generated.tables.records.NameOfServiceRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class NameOfServiceDao extends DAOImpl<NameOfServiceRecord, org.example.spring.tutorial.generated.tables.pojos.NameOfService, Integer> {

    /**
     * Create a new NameOfServiceDao without any configuration
     */
    public NameOfServiceDao() {
        super(NameOfService.NAME_OF_SERVICE, org.example.spring.tutorial.generated.tables.pojos.NameOfService.class);
    }

    /**
     * Create a new NameOfServiceDao with an attached configuration
     */
    @Autowired
    public NameOfServiceDao(Configuration configuration) {
        super(NameOfService.NAME_OF_SERVICE, org.example.spring.tutorial.generated.tables.pojos.NameOfService.class, configuration);
    }

    @Override
    public Integer getId(org.example.spring.tutorial.generated.tables.pojos.NameOfService object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(NameOfService.NAME_OF_SERVICE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchById(Integer... values) {
        return fetch(NameOfService.NAME_OF_SERVICE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.example.spring.tutorial.generated.tables.pojos.NameOfService fetchOneById(Integer value) {
        return fetchOne(NameOfService.NAME_OF_SERVICE.ID, value);
    }

    /**
     * Fetch records that have <code>idd BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchRangeOfIdd(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(NameOfService.NAME_OF_SERVICE.IDD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>idd IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchByIdd(Integer... values) {
        return fetch(NameOfService.NAME_OF_SERVICE.IDD, values);
    }

    /**
     * Fetch a unique record that has <code>idd = value</code>
     */
    public org.example.spring.tutorial.generated.tables.pojos.NameOfService fetchOneByIdd(Integer value) {
        return fetchOne(NameOfService.NAME_OF_SERVICE.IDD, value);
    }

    /**
     * Fetch records that have <code>type_of_service BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchRangeOfTypeOfService(String lowerInclusive, String upperInclusive) {
        return fetchRange(NameOfService.NAME_OF_SERVICE.TYPE_OF_SERVICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type_of_service IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchByTypeOfService(String... values) {
        return fetch(NameOfService.NAME_OF_SERVICE.TYPE_OF_SERVICE, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchRangeOfCreateDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NameOfService.NAME_OF_SERVICE.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchByCreateDate(LocalDateTime... values) {
        return fetch(NameOfService.NAME_OF_SERVICE.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>delete_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchRangeOfDeleteDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NameOfService.NAME_OF_SERVICE.DELETE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delete_date IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.NameOfService> fetchByDeleteDate(LocalDateTime... values) {
        return fetch(NameOfService.NAME_OF_SERVICE.DELETE_DATE, values);
    }
}
