/*
 * This file is generated by jOOQ.
 */
package org.example.spring.tutorial.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.example.spring.tutorial.generated.tables.Services;
import org.example.spring.tutorial.generated.tables.records.ServicesRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ServicesDao extends DAOImpl<ServicesRecord, org.example.spring.tutorial.generated.tables.pojos.Services, Integer> {

    /**
     * Create a new ServicesDao without any configuration
     */
    public ServicesDao() {
        super(Services.SERVICES, org.example.spring.tutorial.generated.tables.pojos.Services.class);
    }

    /**
     * Create a new ServicesDao with an attached configuration
     */
    @Autowired
    public ServicesDao(Configuration configuration) {
        super(Services.SERVICES, org.example.spring.tutorial.generated.tables.pojos.Services.class, configuration);
    }

    @Override
    public Integer getId(org.example.spring.tutorial.generated.tables.pojos.Services object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Services.SERVICES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchById(Integer... values) {
        return fetch(Services.SERVICES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.example.spring.tutorial.generated.tables.pojos.Services fetchOneById(Integer value) {
        return fetchOne(Services.SERVICES.ID, value);
    }

    /**
     * Fetch records that have <code>idd BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfIdd(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Services.SERVICES.IDD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>idd IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByIdd(Integer... values) {
        return fetch(Services.SERVICES.IDD, values);
    }

    /**
     * Fetch a unique record that has <code>idd = value</code>
     */
    public org.example.spring.tutorial.generated.tables.pojos.Services fetchOneByIdd(Integer value) {
        return fetchOne(Services.SERVICES.IDD, value);
    }

    /**
     * Fetch records that have <code>number BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Services.SERVICES.NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>number IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByNumber(Integer... values) {
        return fetch(Services.SERVICES.NUMBER, values);
    }

    /**
     * Fetch a unique record that has <code>number = value</code>
     */
    public org.example.spring.tutorial.generated.tables.pojos.Services fetchOneByNumber(Integer value) {
        return fetchOne(Services.SERVICES.NUMBER, value);
    }

    /**
     * Fetch records that have <code>service_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfServiceName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Services.SERVICES.SERVICE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>service_name IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByServiceName(String... values) {
        return fetch(Services.SERVICES.SERVICE_NAME, values);
    }

    /**
     * Fetch records that have <code>type_of_service_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfTypeOfServiceId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Services.SERVICES.TYPE_OF_SERVICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type_of_service_id IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByTypeOfServiceId(Integer... values) {
        return fetch(Services.SERVICES.TYPE_OF_SERVICE_ID, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfPrice(String lowerInclusive, String upperInclusive) {
        return fetchRange(Services.SERVICES.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByPrice(String... values) {
        return fetch(Services.SERVICES.PRICE, values);
    }

    /**
     * Fetch records that have <code>discount BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfDiscount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Services.SERVICES.DISCOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>discount IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByDiscount(Integer... values) {
        return fetch(Services.SERVICES.DISCOUNT, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfCreateDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Services.SERVICES.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByCreateDate(LocalDateTime... values) {
        return fetch(Services.SERVICES.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>delete_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchRangeOfDeleteDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Services.SERVICES.DELETE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>delete_date IN (values)</code>
     */
    public List<org.example.spring.tutorial.generated.tables.pojos.Services> fetchByDeleteDate(LocalDateTime... values) {
        return fetch(Services.SERVICES.DELETE_DATE, values);
    }
}
